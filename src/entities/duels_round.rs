//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "duels_round")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub game_id: String,
    pub location_id: String,
    pub guess_id_team1: String,
    pub guess_id_team2: String,
    pub round_number: i32,
    #[sea_orm(column_type = "Double")]
    pub damage_multiplier: f64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::duels_game::Entity",
        from = "Column::GameId",
        to = "super::duels_game::Column::Id"
    )]
    Game
}

impl Related<super::duels_game::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Game.def()
    }
}


impl ActiveModelBehavior for ActiveModel {}
