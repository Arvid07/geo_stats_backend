//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "duels_game")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub team_id1: String,
    pub team_id2: String,
    pub health_team1: i32,
    pub health_team2: i32,
    pub team_game_mode: String,
    pub geo_mode: String,
    pub start_time: String,
    pub map_id: String,
    pub rating_before_team1: Option<i32>,
    pub rating_before_team2: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::duels_round::Entity")]
    Rounds,
    #[sea_orm(has_many = "super::guess::Entity")]
    Guesses
}

impl Related<super::duels_round::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Rounds.def()
    }
}

impl Related<super::guess::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Guesses.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}